package main

import (
	"text/template"

	"google.golang.org/protobuf/compiler/protogen"
)

func main() {
	protogen.Options{}.Run(func(gen *protogen.Plugin) error {
		for _, f := range gen.Files {
			if !f.Generate {
				continue
			}
			generateFile(gen, f)
		}
		return nil
	})
}

// generateFile generates a _ascii.pb.go file containing gRPC service definitions.
func generateFile(gen *protogen.Plugin, file *protogen.File) {
	filename := file.GeneratedFilenamePrefix + ".pb.jsonb.go"
	g := gen.NewGeneratedFile(filename, file.GoImportPath)

	// file.Messages[0].GoIdent

	tmpl.Execute(g, file)
}

var tmplSource = `
// Code generated by protoc-gen-psql-json. DO NOT EDIT.
package {{ .GoPackageName }}

import (
	"database/sql/driver"

	"google.golang.org/protobuf/encoding/protojson"
)

{{ range $msg := .Messages }}
func (t *{{ $msg.GoIdent.GoName }}) Scan(val interface{}) error {
	return protojson.Unmarshal(val.([]byte), t)
}

func (t *{{ $msg.GoIdent.GoName }}) Value() (driver.Value, error) {
	return protojson.Marshal(t)
}
{{ end }}
`

var tmpl = template.Must(template.New("sql").Parse(tmplSource))
